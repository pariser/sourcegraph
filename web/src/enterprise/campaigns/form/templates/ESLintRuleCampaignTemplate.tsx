import EslintIcon from 'mdi-react/EslintIcon'
import React, { useCallback, useEffect, useState } from 'react'
import { CampaignTemplate, CampaignTemplateComponentContext } from '.'
import { RuleDefinition } from '../../../rules/types'

interface Props extends CampaignTemplateComponentContext {}

const DEFAULT_RULES = 'semi' // TODO!(sqs): only for demo; after the demo, make empty and communicate to the user it must be filled in

const ESLintRuleCampaignTemplateForm: React.FunctionComponent<Props> = ({ onChange, disabled, location }) => {
    const params = new URLSearchParams(location.search)
    const [rules, setRules] = useState(params.get('rules') || DEFAULT_RULES)
    const onRulesChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(e => {
        setRules(e.currentTarget.value)
    }, [])

    useEffect(() => {
        const rulesOrPlaceholder = rules || '<rule>'
        onChange({
            name: `Enforce ESLint rule${/[\s,]/.test(rulesOrPlaceholder) ? 's:' : ''} ${rulesOrPlaceholder}`,
            rules: [
                // TODO!(sqs): hack
                {
                    name: 'Warn on ESLint rule violations',
                    // tslint:disable-next-line: no-object-literal-type-assertion
                    definition: JSON.stringify({
                        type: 'DiagnosticRule',
                        query: {
                            type: 'eslint',
                            tag: rulesOrPlaceholder.split(/[,\s]+/g).filter(s => !!s),
                        },
                        action: 'eslint.fix',
                    } as RuleDefinition),
                },
            ],
        })
    }, [onChange, rules])

    return (
        <>
            <div className="form-group">
                <label htmlFor="campaign-template-form__rules">Rule IDs</label>
                <input
                    type="text"
                    id="campaign-template-form__rules"
                    className="form-control"
                    required={true}
                    minLength={1}
                    placeholder="no-console, no-extra-parens"
                    value={rules}
                    onChange={onRulesChange}
                    autoFocus={true}
                    disabled={disabled}
                    list="campaign-template-form__rules-datalist"
                />
                <datalist id="campaign-template-form__rules-datalist">
                    {/* eslint-disable-next-line @typescript-eslint/no-use-before-define */}
                    {ALL_BUILTIN_ESLINT_RULE_IDS.map(rule => (
                        <option key={rule}>{rule}</option>
                    ))}
                </datalist>
                <small className="form-help text-muted">
                    <a href="https://eslint.org/docs/rules/" target="_blank" rel="noopener noreferrer">
                        List of ESLint builtin rules
                    </a>
                </small>
            </div>
        </>
    )
}

export const ESLintRuleCampaignTemplate: CampaignTemplate = {
    id: 'eslintRule',
    title: 'Gradually enforce new ESLint rule',
    detail:
        'Warn on violations of a new ESLint rule and open changesets to fix all problems and add the rule to .eslintrc files.',
    icon: EslintIcon,
    renderForm: ESLintRuleCampaignTemplateForm,
}

const ALL_BUILTIN_ESLINT_RULE_IDS = [
    'accessor-pairs',
    'array-bracket-newline',
    'array-bracket-spacing',
    'array-callback-return',
    'array-element-newline',
    'arrow-body-style',
    'arrow-parens',
    'arrow-spacing',
    'block-scoped-var',
    'block-spacing',
    'brace-style',
    'callback-return',
    'capitalized-comments',
    'class-methods-use-this',
    'comma-dangle',
    'comma-spacing',
    'comma-style',
    'computed-property-spacing',
    'consistent-return',
    'consistent-this',
    'constructor-super',
    'default-case',
    'dot-location',
    'dot-notation',
    'eol-last',
    'for-direction',
    'func-call-spacing',
    'func-name-matching',
    'func-names',
    'func-style',
    'function-paren-newline',
    'generator-star-spacing',
    'generator-star',
    'getter-return',
    'global-require',
    'global-strict',
    'guard-for-in',
    'handle-callback-err',
    'id-blacklist',
    'id-length',
    'id-match',
    'implicit-arrow-linebreak',
    'indent-legacy',
    'init-declarations',
    'jsx-quotes',
    'key-spacing',
    'keyword-spacing',
    'line-comment-position',
    'linebreak-style',
    'lines-around-comment',
    'lines-around-directive',
    'lines-between-class-members',
    'max-classes-per-file',
    'max-depth',
    'max-len',
    'max-lines-per-function',
    'max-lines',
    'max-nested-callbacks',
    'max-params',
    'max-statements-per-line',
    'max-statements',
    'multiline-comment-style',
    'multiline-ternary',
    'new-cap',
    'new-parens',
    'newline-after-var',
    'newline-before-return',
    'newline-per-chained-call',
    'no-alert',
    'no-array-constructor',
    'no-arrow-condition',
    'no-async-promise-executor',
    'no-await-in-loop',
    'no-bitwise',
    'no-buffer-constructor',
    'no-caller',
    'no-case-declarations',
    'no-catch-shadow',
    'no-class-assign',
    'no-comma-dangle',
    'no-compare-neg-zero',
    'no-cond-assign',
    'no-confusing-arrow',
    'no-console',
    'no-const-assign',
    'no-constant-condition',
    'no-continue',
    'no-control-regex',
    'no-debugger',
    'no-delete-var',
    'no-div-regex',
    'no-dupe-args',
    'no-dupe-class-members',
    'no-dupe-keys',
    'no-duplicate-case',
    'no-duplicate-imports',
    'no-else-return',
    'no-empty-character-class',
    'no-empty-class',
    'no-empty-function',
    'no-empty-label',
    'no-empty-pattern',
    'no-empty',
    'no-eq-null',
    'no-eval',
    'no-ex-assign',
    'no-extend-native',
    'no-extra-bind',
    'no-extra-boolean-cast',
    'no-extra-label',
    'no-extra-parens',
    'no-extra-semi',
    'no-extra-strict',
    'no-fallthrough',
    'no-floating-decimal',
    'no-func-assign',
    'no-global-assign',
    'no-implicit-coercion',
    'no-implicit-globals',
    'no-implied-eval',
    'no-inline-comments',
    'no-inner-declarations',
    'no-invalid-regexp',
    'no-invalid-this',
    'no-irregular-whitespace',
    'no-iterator',
    'no-label-var',
    'no-labels',
    'no-lone-blocks',
    'no-lonely-if',
    'no-loop-func',
    'no-magic-numbers',
    'no-misleading-character-class',
    'no-mixed-operators',
    'no-mixed-requires',
    'no-mixed-spaces-and-tabs',
    'no-multi-assign',
    'no-multi-spaces',
    'no-multi-str',
    'no-multiple-empty-lines',
    'no-native-reassign',
    'no-negated-condition',
    'no-negated-in-lhs',
    'no-nested-ternary',
    'no-new-func',
    'no-new-object',
    'no-new-require',
    'no-new-symbol',
    'no-new-wrappers',
    'no-new',
    'no-obj-calls',
    'no-octal-escape',
    'no-octal',
    'no-param-reassign',
    'no-path-concat',
    'no-plusplus',
    'no-process-env',
    'no-process-exit',
    'no-proto',
    'no-prototype-builtins',
    'no-redeclare',
    'no-regex-spaces',
    'no-reserved-keys',
    'no-restricted-globals',
    'no-restricted-imports',
    'no-restricted-modules',
    'no-restricted-properties',
    'no-restricted-syntax',
    'no-return-assign',
    'no-return-await',
    'no-script-url',
    'no-self-assign',
    'no-self-compare',
    'no-sequences',
    'no-shadow-restricted-names',
    'no-shadow',
    'no-space-before-semi',
    'no-spaced-func',
    'no-sparse-arrays',
    'no-sync',
    'no-tabs',
    'no-template-curly-in-string',
    'no-ternary',
    'no-this-before-super',
    'no-throw-literal',
    'no-trailing-spaces',
    'no-undef-init',
    'no-undef',
    'no-undefined',
    'no-underscore-dangle',
    'no-unexpected-multiline',
    'no-unmodified-loop-condition',
    'no-unneeded-ternary',
    'no-unreachable',
    'no-unsafe-finally',
    'no-unsafe-negation',
    'no-unused-expressions',
    'no-unused-labels',
    'no-unused-vars',
    'no-use-before-define',
    'no-useless-call',
    'no-useless-catch',
    'no-useless-computed-key',
    'no-useless-concat',
    'no-useless-constructor',
    'no-useless-escape',
    'no-useless-rename',
    'no-useless-return',
    'no-var',
    'no-void',
    'no-warning-comments',
    'no-whitespace-before-property',
    'no-with',
    'no-wrap-func',
    'nonblock-statement-body-position',
    'object-curly-newline',
    'object-curly-spacing',
    'object-property-newline',
    'object-shorthand',
    'one-var-declaration-per-line',
    'one-var',
    'operator-assignment',
    'operator-linebreak',
    'padded-blocks',
    'padding-line-between-statements',
    'prefer-arrow-callback',
    'prefer-const',
    'prefer-destructuring',
    'prefer-named-capture-group',
    'prefer-numeric-literals',
    'prefer-object-spread',
    'prefer-promise-reject-errors',
    'prefer-reflect',
    'prefer-rest-params',
    'prefer-spread',
    'prefer-template',
    'quote-props',
    'require-atomic-updates',
    'require-await',
    'require-jsdoc',
    'require-unicode-regexp',
    'require-yield',
    'rest-spread-spacing',
    'semi-spacing',
    'semi-style',
    'sort-imports',
    'sort-keys',
    'sort-vars',
    'space-after-function-name',
    'space-after-keywords',
    'space-before-blocks',
    'space-before-function-paren',
    'space-before-function-parentheses',
    'space-before-keywords',
    'space-in-brackets',
    'space-in-parens',
    'space-infix-ops',
    'space-return-throw-case',
    'space-unary-ops',
    'space-unary-word-ops',
    'spaced-comment',
    'spaced-line-comment',
    'switch-colon-spacing',
    'symbol-description',
    'template-curly-spacing',
    'template-tag-spacing',
    'unicode-bom',
    'use-isnan',
    'valid-jsdoc',
    'valid-typeof',
    'vars-on-top',
    'wrap-iife',
    'wrap-regex',
    'yield-star-spacing',
]
